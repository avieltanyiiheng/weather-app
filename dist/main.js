(()=>{"use strict";function t(){document.querySelector(".button").addEventListener("click",(async()=>{const t=await async function(t){try{const e=await fetch(`http://api.weatherapi.com/v1/current.json?key=9aee09bcd2194896bde85902232406&q=${t}&aqi=no`),n=await e.json();return void 0===n.error?n:alert("invalid country")}catch(t){console.log("A")}}(document.querySelector(".input").value);console.log(t),function(t){const n=document.querySelector(".main");if(void 0===t)return;n.innerHTML="";const c=document.createElement("div");c.classList.add("content");const s=document.createElement("h3");s.classList.add("text");const a=document.createElement("span");a.classList.add("style"),a.textContent=`${t.current.temp_c}`,s.innerHTML=`\n\n  <img src =${t.current.condition.icon} />\n    <p class="display">\n      It is currently <span class="gradient">${a.textContent}</span> degrees \n      in <span class="gradient">${t.location.country}</span>.\n    </p>\n    \n    <p class = "display">\n      The sky is <span class="gradient">${t.current.condition.text}</span>, and it fcking feels\n      like <span class = "gradient">${t.current.feelslike_c} degrees </span>.\n    </p>\n    `;const o=document.createElement("button");o.addEventListener("click",e),o.textContent="Search for another Country",c.append(s),n.append(c,o)}(t)}))}function e(){const e=document.querySelector(".main");e.innerHTML="";const n=document.createElement("input");n.classList.add("input"),n.setAttribute("type","text"),n.setAttribute("placeholder","Input Country...");const c=document.createElement("button");c.classList.add("button"),c.textContent="Search for Weather Details",e.append(n,c),e.classList.add("search"),t()}e()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoibUJBSWUsU0FBU0EsSUFDUEMsU0FBU0MsY0FBYyxXQUUvQkMsaUJBQWlCLFNBQVNDLFVBQy9CLE1BQU1DLFFDUktELGVBQTRCRSxHQUN6QyxJQUNFLE1BQU1DLFFBQWlCQyxNQUNyQixrRkFBa0ZGLFlBRzlFRyxRQUFnQkYsRUFBU0csT0FLL0IsWUFGb0JDLElBQWxCRixFQUFRRyxNQUFzQkgsRUFBVUksTUFBTSxrQkFJbEQsQ0FBRSxNQUFPQyxHQUNQQyxRQUFRQyxJQUFJLElBQ2QsQ0FDRixDQ1hrQkMsQ0FGRmhCLFNBQVNDLGNBQWMsVUFFRmdCLE9GSWpDSCxRQUFRQyxJQUFJWCxHR1BELFNBQTBCYyxHQUN2QyxNQUFNQyxFQUFPbkIsU0FBU0MsY0FBYyxTQUdwQyxRQUFhUyxJQUFUUSxFQUNGLE9BSUZDLEVBQUtDLFVBQVksR0FDakIsTUFBTUMsRUFBTXJCLFNBQVNzQixjQUFjLE9BQ25DRCxFQUFJRSxVQUFVQyxJQUFJLFdBRWxCLE1BQU1DLEVBQVV6QixTQUFTc0IsY0FBYyxNQUN2Q0csRUFBUUYsVUFBVUMsSUFBSSxRQUV0QixNQUFNRSxFQUFPMUIsU0FBU3NCLGNBQWMsUUFDcENJLEVBQUtILFVBQVVDLElBQUksU0FDbkJFLEVBQUtDLFlBQWMsR0FBR1QsRUFBS1UsUUFBUUMsU0FFbkNKLEVBQVFMLFVBQVksbUJBRVJGLEVBQUtVLFFBQVFFLFVBQVVDLGtGQUVVTCxFQUFLQyxnRUFDbEJULEVBQUtjLFNBQVNQLHVHQUlOUCxFQUFLVSxRQUFRRSxVQUFVRyx5RUFDM0JmLEVBQUtVLFFBQVFNLCtDQUlqRCxNQUFNQyxFQUFzQm5DLFNBQVNzQixjQUFjLFVBRW5EYSxFQUFvQmpDLGlCQUFpQixRQUFTa0MsR0FFOUNELEVBQW9CUixZQUFjLDZCQUNsQ04sRUFBSWdCLE9BQU9aLEdBQ1hOLEVBQUtrQixPQUFPaEIsRUFBS2MsRUFDbkIsQ0hqQ0lHLENBQWlCbEMsRUFBUSxHQUk3QixDSVZlLFNBQVNnQyxJQUN0QixNQUFNakIsRUFBT25CLFNBQVNDLGNBQWMsU0FFcENrQixFQUFLQyxVQUFZLEdBRWpCLE1BQU1tQixFQUFhdkMsU0FBU3NCLGNBQWMsU0FDMUNpQixFQUFXaEIsVUFBVUMsSUFBSSxTQUN6QmUsRUFBV0MsYUFBYSxPQUFRLFFBQ2hDRCxFQUFXQyxhQUFhLGNBQWUsb0JBRXZDLE1BQU1DLEVBQWdCekMsU0FBU3NCLGNBQWMsVUFDN0NtQixFQUFjbEIsVUFBVUMsSUFBSSxVQUM1QmlCLEVBQWNkLFlBQWMsNkJBRTVCUixFQUFLa0IsT0FBT0UsRUFBWUUsR0FFeEJ0QixFQUFLSSxVQUFVQyxJQUFJLFVBRW5CekIsR0FDRixDQ3BCQXFDLEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL3NyYy9zZWFyY2hGb3JXZWF0aGVyQnV0dG9uLmpzIiwid2VicGFjazovL3dlYXRoZXItYXBwLy4vc3JjL2ZldGNoQVBJRGF0YS5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL3NyYy9nZXRJbnB1dERhdGEuanMiLCJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvLi9zcmMvZGlzcGxheUlucHV0RGF0YS5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL3NyYy9pbml0LmpzIiwid2VicGFjazovL3dlYXRoZXItYXBwLy4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBmZXRjaEFQSURhdGEgZnJvbSBcIi4vZmV0Y2hBUElEYXRhXCI7XHJcbmltcG9ydCBkaXNwbGF5SW5wdXREYXRhIGZyb20gXCIuL2Rpc3BsYXlJbnB1dERhdGFcIjtcclxuaW1wb3J0IGdldElucHV0RGF0YSBmcm9tIFwiLi9nZXRJbnB1dERhdGFcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHNlYXJjaEZvcldlYXRoZXJCdXR0b25GdW5jdGlvbmFsaXR5KCkge1xyXG4gIGNvbnN0IGJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuYnV0dG9uXCIpO1xyXG5cclxuICBidXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGFzeW5jICgpID0+IHtcclxuICAgIGNvbnN0IEFQSWRhdGEgPSBhd2FpdCBnZXRJbnB1dERhdGEoKTtcclxuICAgIGNvbnNvbGUubG9nKEFQSWRhdGEpO1xyXG4gICAgZGlzcGxheUlucHV0RGF0YShBUElkYXRhKTtcclxuXHJcbiAgICAvLyBkaXNwbGF5SW5wdXREYXRhKCk7XHJcbiAgfSk7XHJcbn1cclxuIiwiZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gZmV0Y2hBUElEYXRhKGlucHV0KSB7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goXHJcbiAgICAgIGBodHRwOi8vYXBpLndlYXRoZXJhcGkuY29tL3YxL2N1cnJlbnQuanNvbj9rZXk9OWFlZTA5YmNkMjE5NDg5NmJkZTg1OTAyMjMyNDA2JnE9JHtpbnB1dH0mYXFpPW5vYFxyXG4gICAgKTtcclxuXHJcbiAgICBjb25zdCBqc29uaWZ5ID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xyXG5cclxuICAgIGNvbnN0IHJlc3VsdCA9XHJcbiAgICAgIGpzb25pZnkuZXJyb3IgPT09IHVuZGVmaW5lZCA/IGpzb25pZnkgOiBhbGVydChcImludmFsaWQgY291bnRyeVwiKTtcclxuICAgIC8vIGNvbnNvbGUubG9nKHJlc3VsdCk7XHJcbiAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgLy8gY29uc29sZS5sb2coYSk7XHJcbiAgfSBjYXRjaCAoZXJyKSB7XHJcbiAgICBjb25zb2xlLmxvZyhcIkFcIik7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCBmZXRjaEFQSURhdGEgZnJvbSBcIi4vZmV0Y2hBUElEYXRhXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRJbnB1dERhdGEoKSB7XHJcbiAgY29uc3QgaW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmlucHV0XCIpO1xyXG5cclxuICBjb25zdCBBUElkYXRhID0gZmV0Y2hBUElEYXRhKGlucHV0LnZhbHVlKTtcclxuICByZXR1cm4gQVBJZGF0YTtcclxufVxyXG4iLCJpbXBvcnQgaW5pdCBmcm9tIFwiLi9pbml0XCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBkaXNwbGF5SW5wdXREYXRhKGRhdGEpIHtcclxuICBjb25zdCBtYWluID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5tYWluXCIpO1xyXG5cclxuICAvLyAgIERvbnQgcmVtb3ZlIHRoZSBmdWNraW5nIGlucHV0IGlmIGl0cyBpbnZhbGlkXHJcbiAgaWYgKGRhdGEgPT09IHVuZGVmaW5lZCkge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgLy8gICBleGVjdXRpb24gY29kZSBpZiBpdHMgZnVja2luZyB2YWxpZCBicm8gZXogbWlkXHJcbiAgbWFpbi5pbm5lckhUTUwgPSBcIlwiO1xyXG4gIGNvbnN0IGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgZGl2LmNsYXNzTGlzdC5hZGQoXCJjb250ZW50XCIpO1xyXG5cclxuICBjb25zdCBjb3VudHJ5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImgzXCIpO1xyXG4gIGNvdW50cnkuY2xhc3NMaXN0LmFkZChcInRleHRcIik7XHJcblxyXG4gIGNvbnN0IHRlbXAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtcclxuICB0ZW1wLmNsYXNzTGlzdC5hZGQoXCJzdHlsZVwiKTtcclxuICB0ZW1wLnRleHRDb250ZW50ID0gYCR7ZGF0YS5jdXJyZW50LnRlbXBfY31gO1xyXG5cclxuICBjb3VudHJ5LmlubmVySFRNTCA9IGBcclxuXHJcbiAgPGltZyBzcmMgPSR7ZGF0YS5jdXJyZW50LmNvbmRpdGlvbi5pY29ufSAvPlxyXG4gICAgPHAgY2xhc3M9XCJkaXNwbGF5XCI+XHJcbiAgICAgIEl0IGlzIGN1cnJlbnRseSA8c3BhbiBjbGFzcz1cImdyYWRpZW50XCI+JHt0ZW1wLnRleHRDb250ZW50fTwvc3Bhbj4gZGVncmVlcyBcclxuICAgICAgaW4gPHNwYW4gY2xhc3M9XCJncmFkaWVudFwiPiR7ZGF0YS5sb2NhdGlvbi5jb3VudHJ5fTwvc3Bhbj4uXHJcbiAgICA8L3A+XHJcbiAgICBcclxuICAgIDxwIGNsYXNzID0gXCJkaXNwbGF5XCI+XHJcbiAgICAgIFRoZSBza3kgaXMgPHNwYW4gY2xhc3M9XCJncmFkaWVudFwiPiR7ZGF0YS5jdXJyZW50LmNvbmRpdGlvbi50ZXh0fTwvc3Bhbj4sIGFuZCBpdCBmY2tpbmcgZmVlbHNcclxuICAgICAgbGlrZSA8c3BhbiBjbGFzcyA9IFwiZ3JhZGllbnRcIj4ke2RhdGEuY3VycmVudC5mZWVsc2xpa2VfY30gZGVncmVlcyA8L3NwYW4+LlxyXG4gICAgPC9wPlxyXG4gICAgYDtcclxuXHJcbiAgY29uc3QgdHJ5TmV3Q291bnRyeUJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XHJcblxyXG4gIHRyeU5ld0NvdW50cnlCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGluaXQpO1xyXG5cclxuICB0cnlOZXdDb3VudHJ5QnV0dG9uLnRleHRDb250ZW50ID0gXCJTZWFyY2ggZm9yIGFub3RoZXIgQ291bnRyeVwiO1xyXG4gIGRpdi5hcHBlbmQoY291bnRyeSk7XHJcbiAgbWFpbi5hcHBlbmQoZGl2LCB0cnlOZXdDb3VudHJ5QnV0dG9uKTtcclxufVxyXG4iLCJpbXBvcnQgc2VhcmNoRm9yV2VhdGhlckJ1dHRvbkZ1bmN0aW9uYWxpdHkgZnJvbSBcIi4vc2VhcmNoRm9yV2VhdGhlckJ1dHRvblwiO1xyXG5pbXBvcnQgZ2V0SW5wdXREYXRhIGZyb20gXCIuL2dldElucHV0RGF0YVwiO1xyXG5pbXBvcnQgZmV0Y2hBUElEYXRhIGZyb20gXCIuL2ZldGNoQVBJRGF0YVwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaW5pdCgpIHtcclxuICBjb25zdCBtYWluID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5tYWluXCIpO1xyXG5cclxuICBtYWluLmlubmVySFRNTCA9IFwiXCI7XHJcblxyXG4gIGNvbnN0IGlucHV0RmllbGQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XHJcbiAgaW5wdXRGaWVsZC5jbGFzc0xpc3QuYWRkKFwiaW5wdXRcIik7XHJcbiAgaW5wdXRGaWVsZC5zZXRBdHRyaWJ1dGUoXCJ0eXBlXCIsIFwidGV4dFwiKTtcclxuICBpbnB1dEZpZWxkLnNldEF0dHJpYnV0ZShcInBsYWNlaG9sZGVyXCIsIFwiSW5wdXQgQ291bnRyeS4uLlwiKTtcclxuXHJcbiAgY29uc3QgZXhlY3V0ZUJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XHJcbiAgZXhlY3V0ZUJ1dHRvbi5jbGFzc0xpc3QuYWRkKFwiYnV0dG9uXCIpO1xyXG4gIGV4ZWN1dGVCdXR0b24udGV4dENvbnRlbnQgPSBcIlNlYXJjaCBmb3IgV2VhdGhlciBEZXRhaWxzXCI7XHJcblxyXG4gIG1haW4uYXBwZW5kKGlucHV0RmllbGQsIGV4ZWN1dGVCdXR0b24pO1xyXG5cclxuICBtYWluLmNsYXNzTGlzdC5hZGQoXCJzZWFyY2hcIik7XHJcblxyXG4gIHNlYXJjaEZvcldlYXRoZXJCdXR0b25GdW5jdGlvbmFsaXR5KCk7XHJcbn1cclxuIiwiaW1wb3J0IGluaXQgZnJvbSBcIi4vaW5pdFwiO1xyXG5pbXBvcnQgZmV0Y2hBUElEYXRhIGZyb20gXCIuL2ZldGNoQVBJRGF0YVwiO1xyXG5cclxuaW5pdCgpO1xyXG5cclxuLy8gY29uc3QgYSA9IGZldGNoQVBJRGF0YSgpO1xyXG4vLyBjb25zb2xlLmxvZyhhKTtcclxuIl0sIm5hbWVzIjpbInNlYXJjaEZvcldlYXRoZXJCdXR0b25GdW5jdGlvbmFsaXR5IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiYWRkRXZlbnRMaXN0ZW5lciIsImFzeW5jIiwiQVBJZGF0YSIsImlucHV0IiwicmVzcG9uc2UiLCJmZXRjaCIsImpzb25pZnkiLCJqc29uIiwidW5kZWZpbmVkIiwiZXJyb3IiLCJhbGVydCIsImVyciIsImNvbnNvbGUiLCJsb2ciLCJmZXRjaEFQSURhdGEiLCJ2YWx1ZSIsImRhdGEiLCJtYWluIiwiaW5uZXJIVE1MIiwiZGl2IiwiY3JlYXRlRWxlbWVudCIsImNsYXNzTGlzdCIsImFkZCIsImNvdW50cnkiLCJ0ZW1wIiwidGV4dENvbnRlbnQiLCJjdXJyZW50IiwidGVtcF9jIiwiY29uZGl0aW9uIiwiaWNvbiIsImxvY2F0aW9uIiwidGV4dCIsImZlZWxzbGlrZV9jIiwidHJ5TmV3Q291bnRyeUJ1dHRvbiIsImluaXQiLCJhcHBlbmQiLCJkaXNwbGF5SW5wdXREYXRhIiwiaW5wdXRGaWVsZCIsInNldEF0dHJpYnV0ZSIsImV4ZWN1dGVCdXR0b24iXSwic291cmNlUm9vdCI6IiJ9